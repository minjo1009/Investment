name: Backtest V2 Rerun

on:
  workflow_dispatch:
  workflow_call:

jobs:
  train:
    uses: ./.github/workflows/backtest_v2_train.yml

  rerun:
    needs: train
    runs-on: ubuntu-latest
    steps:
      - name: Validate pinned SHAs
        run: |
          set -e
          git ls-remote https://github.com/actions/checkout | grep 08c6903cd8c0fde910a37f88322edcfb5dd907a8
          git ls-remote https://github.com/actions/setup-python | grep a26af69be951a213d495a4c3e4e4022e16d87065
          git ls-remote https://github.com/actions/upload-artifact | grep ea165f8d65b6e75b540449e92b4886f43607fa02
          git ls-remote https://github.com/actions/download-artifact | grep refs/tags/v4
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas numpy scikit-learn
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: backtest_v2_diag_align
          path: artifact.zip
      - name: Extract artifacts to repo root
        run: |
          mkdir -p _out_4u
          bsdtar -x -f artifact.zip -C .
          find _out_4u -maxdepth 2 -type f | sed -n '1,20p'
      - name: Download model
        uses: actions/download-artifact@v4
        with:
          name: trained-model
          path: model.zip
      - name: Extract model artifact
        run: |
          bsdtar -x -f model.zip -C .
          ls -l conf/model.pkl
          sed -E 's/^[[:space:]]{10}//' <<'PY' | python -
import joblib
clf=joblib.load('conf/model.pkl')
print("LOADED:", hasattr(clf,'coef_'))
PY
      - name: Ensure fallback code removed
        run: |
          if grep -R "fallback to 0.5" -n backtest; then
            echo "ERROR: fallback code remains"; exit 1; fi
      - name: Model and feature smoke test
        run: |
          sed -E 's/^[[:space:]]{10}//' <<'PY' | python -
import joblib, pandas as pd, numpy as np
from sklearn.utils.validation import check_is_fitted
clf=joblib.load('conf/model.pkl')
check_is_fitted(clf)
print("[OK] fitted model")
df=pd.read_csv('_out_4u/run/preds_test.csv')
feats=getattr(clf,'feature_names_in_',None)
if feats:
    miss=[f for f in feats if f not in df.columns]
    assert not miss, f"Missing features in preds: {miss}"
    X=df[feats].apply(pd.to_numeric,errors='coerce').fillna(0).values
    assert np.isfinite(X).all()
print("[OK] feature match")
PY
      - name: Re-run backtest
        run: |
          set -e
          python backtest/runner_patched.py \
            --data-root data \
            --csv-glob '*.csv' \
            --params conf/params_champion.yml \
            --flags conf/feature_flags.yml \
            --calibrator conf/calibrator_bins.json \
            --outdir _out/final \
            --debug-level entries || true
      - name: Upload artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: backtest_v2_rerun
          path: _out/final
