name: BacktestV2-Strict
on:
  workflow_dispatch:
    inputs:
      CODE_ZIP:
        description: code pack (optional)
        required: false
        default: ""
      DATA_ZIP:
        description: data zip path
        required: true
      CSV_GLOB:
        description: csv glob inside data
        required: true
env:
  CHECKOUT_SHA: 08c6903cd8c0fde910a37f88322edcfb5dd907a8
  SETUP_PYTHON_SHA: a26af69be951a213d495a4c3e4e4022e16d87065
  UPLOAD_ARTIFACT_SHA: ea165f8d65b6e75b540449e92b4886f43607fa02
  PY: '3.11'
jobs:
  validate_shas:
    runs-on: ubuntu-latest
    steps:
      - name: Validate pinned SHAs
        run: |
          set -euo pipefail
          for repo sha in \
            "actions/checkout $CHECKOUT_SHA" \
            "actions/setup-python $SETUP_PYTHON_SHA" \
            "actions/upload-artifact $UPLOAD_ARTIFACT_SHA"
          do
            r=$(echo "$repo" | awk '{print $1}')
            s=$(echo "$repo" | awk '{print $2}')
            git ls-remote https://github.com/$r | grep -F "$s" >/dev/null
          done

  backtest:
    needs: validate_shas
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (pinned)
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Setup Python (pinned)
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: ${{ env.PY }}

      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install pandas numpy scikit-learn pyyaml

      - name: Prepare dirs
        run: |
          set -e
          install -d _in _out_4u/run data

      - name: Download data zip
        run: |
          set -e
          cp "${{ inputs.DATA_ZIP }}" _in/data.zip
          python - <<'PY'
import zipfile, os
z=zipfile.ZipFile('_in/data.zip')
z.extractall('data')
open('_out_4u/run/gating_debug.json','a').close()
PY

      - name: Optional code pack
        if: ${{ inputs.CODE_ZIP != '' }}
        run: |
          set -e
          cp "${{ inputs.CODE_ZIP }}" _in/code.zip
          python - <<'PY'
import zipfile
zipfile.ZipFile('_in/code.zip').extractall('.')
PY

      - name: Detect CSV and preflight
        run: |
          set -e
          python - <<'PY'
import glob, sys, pandas as pd, json, os
g = os.environ.get("CSV_GLOB") or "${{ inputs.CSV_GLOB }}"
cands = glob.glob(f"**/{g}", recursive=True)
if not cands: 
    print("CSV NOT FOUND"); sys.exit(2)
csv = cands[0]
df = pd.read_csv(csv, nrows=5)
need = {"open_time","open","high","low","close","volume"}
if not need.issubset(set(map(str.lower, df.columns))):
    low = set([c.lower() for c in df.columns])
    if not need.issubset(low):
        print("MISSING COLUMNS", need - low); sys.exit(2)
print("CSV_PATH", csv)
open("_out_4u/run/gating_debug.json",'a').close()
PY

      - name: Run backtest
        run: |
          set -e
          python backtest/runner_patched.py \
            --data-root data \
            --csv-glob "${{ inputs.CSV_GLOB }}" \
            --params conf/params_champion.yml \
            --flags conf/feature_flags.yml \
            --outdir _out_4u/run \
            --limit-bars 250000 || true
          python - <<'PY'
import json, os, sys
p="_out_4u/run/summary.json"
if not os.path.exists(p):
    open("_out_4u/run/summary.json","w").write(json.dumps({}))
    open("_out_4u/run/preds_test.csv","w").write("")
    open("_out_4u/run/trades.csv","w").write("")
    open("_out_4u/run/gating_debug.json","a").close()
print("Artifacts ensured")
PY

      - name: Print metrics & gates
        run: |
          python - <<'PY'
import json, os
s=json.load(open("_out_4u/run/summary.json")) if os.path.exists("_out_4u/run/summary.json") else {}
print("[SUMMARY]", {k:s.get(k) for k in ["winrate","mcc","num_trades","cum_pnl_bps"]})
import pandas as pd
dbg=pd.read_json("_out_4u/run/gating_debug.json", lines=False, typ="list") if os.path.exists("_out_4u/run/gating_debug.json") else pd.DataFrame()
cols=[c for c in ["divergence","in_box","OFI_z","regime","size_frac"] if c in dbg]
print("[COLUMNS_PRESENT]", cols)
PY

      - name: Upload artifacts (pinned)
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: backtest_v2_out
          path: |
            _out_4u/run/summary.json
            _out_4u/run/gating_debug.json
            _out_4u/run/preds_test.csv
            _out_4u/run/trades.csv
