name: Backtest V2 Train Model

on:
  workflow_dispatch:
  workflow_call:

jobs:
  diag_align:
    uses: ./.github/workflows/backtest_v2_diag_align.yml
    with:
      DATA_ZIP: ETHUSDT_1min_2020_2025.zip
      CSV_GLOB: '*.csv'
    secrets: inherit
  train:
    needs: diag_align
    runs-on: ubuntu-latest
    steps:
      - name: Validate pinned SHAs
        run: |
          set -e
          git ls-remote https://github.com/actions/checkout | grep 08c6903cd8c0fde910a37f88322edcfb5dd907a8
          git ls-remote https://github.com/actions/setup-python | grep a26af69be951a213d495a4c3e4e4022e16d87065
          git ls-remote https://github.com/actions/upload-artifact   | grep ea165f8d65b6e75b540449e92b4886f43607fa02
          git ls-remote https://github.com/actions/download-artifact | grep refs/tags/v4

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas numpy scikit-learn joblib

      - name: Download backtest outputs
        uses: actions/download-artifact@v4
        with:
          name: backtest_v2_diag_align
          path: _out_4u

      - name: List artifact files
        run: ls -R _out_4u

      - name: Train model
        run: |
          python - <<'PYCODE'
          import pandas as pd, joblib, os, yaml
          from sklearn.linear_model import LogisticRegression

          # find preds_test.csv dynamically
          preds_path, trades_path = None, None
          for root, _, files in os.walk("_out_4u"):
              if "preds_test.csv" in files:
                  preds_path = os.path.join(root, "preds_test.csv")
              if "trades.csv" in files:
                  trades_path = os.path.join(root, "trades.csv")

          if not preds_path or not trades_path:
              raise FileNotFoundError("preds_test.csv or trades.csv not found in downloaded artifact")

          preds = pd.read_csv(preds_path)
          trades = pd.read_csv(trades_path)

          if "label" not in preds.columns:
              params = yaml.safe_load(open('conf/params_champion.yml'))
              flags  = yaml.safe_load(open('conf/feature_flags.yml'))
              p_thr = flags.get('entry', {}).get('p_thr', {})
              ev_thr = flags.get('ev', {}).get('p_ev_req', {})
              delta_p = params.get('ev_gate', {}).get('regime', {})
              def label_row(row):
                  regime = row.get('regime')
                  thr = p_thr.get(regime, 0.5)
                  ev_req = ev_thr.get(regime, 0.5)
                  dp_min = delta_p.get(regime, {}).get('delta_p_min', 0.0)
                  return int((row['p_trend'] >= thr) and ((row['p_trend'] - ev_req) >= dp_min))
              preds['label'] = preds.apply(label_row, axis=1)

          features = [c for c in ["macd_hist","ofi","rsi","adx","p_trend","p_raw"] if c in preds.columns]
          if not features:
              raise RuntimeError("No valid features found in preds_test.csv")

          X = preds[features].fillna(0.0).to_numpy()
          y = preds["label"].astype(int).to_numpy()

          clf = LogisticRegression(max_iter=500)
          clf.fit(X, y)

          joblib.dump(clf, "conf/model.pkl")
          print("âœ… Model trained and saved to conf/model.pkl")
          PYCODE

      - name: Upload model
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: trained-model
          path: conf/model.pkl
