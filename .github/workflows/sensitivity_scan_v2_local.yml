name: SensitivityScan_v2_LOCAL
on:
  workflow_dispatch:
    inputs:
      CSV_GLOB:
        description: Glob to detect the CSV (default matches standard ETHUSDT 1min)
        required: true
        default: "**/*ETHUSDT*1min*2020*2025*.csv"
        type: string
      THR_LIST:
        description: Comma-separated p_thr list (e.g. 0.78,0.80,0.83)
        required: true
        default: "0.80,0.83"
        type: string
      HOLD_LIST:
        description: Comma-separated min_hold list (e.g. 6,8,10)
        required: true
        default: "6,8"
        type: string
      PY:
        description: Python version
        required: true
        default: "3.11"
        type: choice
        options:
          - "3.11"
          - "3.10"
      OS:
        description: Runner OS
        required: true
        default: "ubuntu-latest"
        type: choice
        options:
          - ubuntu-latest
      PIN_STRICT:
        description: Enforce pinned SHAs (true or false)
        required: true
        default: "true"
        type: choice
        options:
          - "true"
          - "false"

env:
  CODE_ZIP: strategy_v2_codepack_v2.1.3.zip
  DATA_ZIP: ETHUSDT_1min_2020_2025.zip
  CHECKOUT_SHA: 08c6903cd8c0fde910a37f88322edcfb5dd907a8
  SETUP_PYTHON_SHA: a26af69be951a213d495a4c3e4e4022e16d87065
  UPLOAD_ARTIFACT_SHA: ea165f8d65b6e75b540449e92b4886f43607fa02

jobs:
  sensitivity:
    runs-on: ${{ inputs.OS }}
    steps:
      - name: Validate pinned SHAs (STRICT)
        if: ${{ inputs.PIN_STRICT == 'true' }}
        shell: bash
        run: |
          set -euo pipefail
          repos=("actions/checkout" "actions/setup-python" "actions/upload-artifact")
          shas=("${CHECKOUT_SHA}" "${SETUP_PYTHON_SHA}" "${UPLOAD_ARTIFACT_SHA}")
          i=0
          while [ $i -lt ${#repos[@]} ]; do
            repo="${repos[$i]}"
            sha="${shas[$i]}"
            work="v_$i"
            git init "$work"
            cd "$work"
            git remote add origin "https://github.com/${repo}.git"
            git fetch --depth 1 origin "${sha}"
            git cat-file -t "${sha}" | grep -q commit
            cd ..
            rm -rf "$work"
            i=$((i+1))
          done

      - name: Checkout (pinned SHA)
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Verify root files exist
        shell: bash
        run: |
          set -euo pipefail
          test -f "${CODE_ZIP}" || { echo "::error::Missing code zip ${CODE_ZIP}"; exit 1; }
          test -f "${DATA_ZIP}" || { echo "::error::Missing data zip ${DATA_ZIP}"; exit 1; }
          test -f "conf/params_champion.yml" || { echo "::error::Missing conf/params_champion.yml"; exit 1; }

      - name: Prepare
        shell: bash
        run: |
          set -euo pipefail
          install -d out
          date +%Y%m%d-%H%M%S > RUN_ID_TAG.txt
          echo "RUN_ID_TAG=$(cat RUN_ID_TAG.txt)" >> "$GITHUB_ENV"

      - name: Unzip data and detect CSV
        id: csvdetect
        shell: bash
        run: |
          set -euo pipefail
          unzip -q -o "${DATA_ZIP}" -d data
          shopt -s globstar nullglob
          match=()
          for f in data/**/${{ inputs.CSV_GLOB }}; do
            if [ -f "$f" ]; then match+=("$f"); fi
          done
          if [ "${#match[@]}" -eq 0 ]; then
            echo "::error::CSVDetect"
            echo "No CSV matched glob: ${{ inputs.CSV_GLOB }}"
            exit 1
          fi
          echo "CSV_PATH=${match[0]}" >> "$GITHUB_ENV"

      - name: Setup Python (pinned SHA)
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: ${{ inputs.PY }}

      - name: Install dependencies
        shell: bash
        run: |
          set -euo pipefail
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install pandas numpy scikit-learn pyyaml
          fi

      - name: Unzip codepack
        shell: bash
        run: |
          set -euo pipefail
          rm -rf _codepack
          unzip -q -o "${CODE_ZIP}" -d _codepack

      - name: Sensitivity loop
        shell: bash
        run: |
          set -euo pipefail
          thr_list="${{ inputs.THR_LIST }}"
          hold_list="${{ inputs.HOLD_LIST }}"
          IFS=',' read -r -a thrs <<< "$thr_list"
          IFS=',' read -r -a holds <<< "$hold_list"
          for thr in "${thrs[@]}"; do
            for hold in "${holds[@]}"; do
              tag="thr_${thr}_hold_${hold}"
              odir="out/${tag}"
              install -d "$odir"
              par="${odir}/params.yml"
              python -c 'import sys,yaml; d=yaml.safe_load(open("conf/params_champion.yml")); thr=float(sys.argv[1]); hold=int(sys.argv[2]); d["entry"]["p_thr"]["trend"]=thr; d["entry"]["p_thr"]["range"]=thr; d["exit"]["min_hold"]=hold; yaml.safe_dump(d, open(sys.argv[3],"w"))' "$thr" "$hold" "$par"
              python backtest/runner_patched.py --data-root data --csv-glob "${{ inputs.CSV_GLOB }}" --params "$par" --outdir "$odir"
              for f in summary.json gating_debug.json preds_test.csv trades.csv; do
                [ -f "$odir/$f" ] || printf '{}' > "$odir/${f}"
              done
            done
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: sensitivity_local_${{ github.run_id }}_${{ env.RUN_ID_TAG }}
          path: |
            out
          if-no-files-found: warn
