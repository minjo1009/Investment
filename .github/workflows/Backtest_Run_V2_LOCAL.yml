name: Backtest_Run_V2_LOCAL
on:
  workflow_dispatch:
    inputs:
      CSV_GLOB:
        description: Data CSV glob
        default: "**/*ETHUSDT*1min*2020*2025*.csv"
        required: true
        type: string
      PY:
        description: Python version
        default: "3.11"
        required: true
        type: choice
        options: ["3.11","3.10"]
      OUTDIR:
        description: Output directory under out/
        default: "A"
        required: true
        type: string
      CALIBRATOR:
        description: Optional calibrator JSON path
        default: ""
        required: true
        type: string

env:
  CODE_ZIP: strategy_v2_codepack_v2.1.3.zip
  DATA_ZIP: ETHUSDT_1min_2020_2025.zip

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: ${{ inputs.PY }}

      - name: Verify required files
        shell: bash
        run: |
          set -euo pipefail
          for f in "$CODE_ZIP" "$DATA_ZIP" "conf/params_champion.yml" "specs/strategy_v2_spec.yml" "backtest/runner_patched_v2_iso.py"; do
            if [ ! -f "$f" ]; then
              echo "::error::Required file missing: $f"; exit 1
            fi
          done

      - name: Install dependencies
        shell: bash
        run: |
          set -euo pipefail
          python -V; pip -V
          pip install --upgrade pip
          pip install --prefer-binary "numpy<2.0" "llvmlite==0.42.*" "numba==0.59.*" "pandas<2.3" "scikit-learn<1.5" "pyyaml" || \
          pip install "numpy==1.24.4" "llvmlite==0.40.*" "numba==0.57.*" "pandas==1.5.3" "scikit-learn==1.2.2" "pyyaml"

      - name: Unzip data and codepack
        shell: bash
        run: |
          set -euo pipefail
          rm -rf data _codepack
          unzip -q -o "$DATA_ZIP" -d data
          unzip -q -o "$CODE_ZIP" -d _codepack
          echo "PYTHONPATH=_codepack:_codepack/src:.:src" >> "$GITHUB_ENV"

      - name: Import self-test
        shell: bash
        run: |
          set -euo pipefail
          python -c "import importlib,sys;mods=['backtest.strategy_v2.conviction','backtest.strategy_v2.filters','backtest.strategy_v2.costs'];ok=True\nfor m in mods:\n  try:\n    importlib.import_module(m);print('[OK]',m)\n  except Exception as e:\n    print('[FAIL]',m,':',e);ok=False\nimport sys; sys.exit(0 if ok else 1)"

      - name: Detect CSV by glob
        shell: bash
        run: |
          set -euo pipefail
          python -c "import glob,os,sys;pat=os.environ.get('INPUT_CSV_GLOB') or '**/*.csv';m=glob.glob(os.path.join('data',pat),recursive=True);print('Found',len(m));\nimport sys\n(sys.exit(1) if not m else print('Using',m[0]));open(os.environ['GITHUB_ENV'],'a').write('CSV_PATH='+m[0]+'\\n')"

      - name: Run backtest
        shell: bash
        run: |
          set -euo pipefail
          CAL=""; if [ -n "${{ inputs.CALIBRATOR }}" ] && [ -f "${{ inputs.CALIBRATOR }}" ]; then CAL="--calibrator ${{ inputs.CALIBRATOR }}"; fi
          install -d "out/${{ inputs.OUTDIR }}"
          python backtest/runner_patched_v2_iso.py --mode run \
            --data-root data --csv-glob "${{ inputs.CSV_GLOB }}" \
            --params conf/params_champion.yml --outdir "out/${{ inputs.OUTDIR }}" $CAL

      - name: Inspect outputs
        shell: bash
        run: |
          set -euo pipefail
          test -f "out/${{ inputs.OUTDIR }}/summary.json" || (echo "::error::summary.json missing" && exit 1)
          python -c "import os,json; p='out/'+(os.environ.get('INPUT_OUTDIR','A'))+'/summary.json';print('[SUMMARY]',json.load(open(p)))"

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: backtest_local_${{ github.run_id }}
          path: out/${{ inputs.OUTDIR }}
          if-no-files-found: error
